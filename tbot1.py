# -*- coding: utf-8 -*-
import redis
import os
import telebot
# import some_api_lib
# import ...

# Example of your code beginning
#           Config vars
token = os.environ['TELEGRAM_TOKEN']
some_api_token = os.environ['SOME_API_TOKEN']
#             ...

# If you use redis, install this add-on https://elements.heroku.com/addons/heroku-redis
r = redis.from_url(os.environ.get("REDIS_URL"))

#       Your bot code below
# bot = telebot.TeleBot(token)
# some_api = some_api_lib.connect(some_api_token)
#              ...
# -*- coding: utf8 -*-
import telebot
from telebot import types

bot = telebot.TeleBot(token)

print(bot.get_me())

def log(message, answer):
    print("\n -----")
    from datetime import datetime
    print(datetime.now())
    print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1} (id = {2}), username - {4} \n –¢–µ–∫—Å—Ç - {3}." .format(message.from_user.first_name,
                                                                 message.from_user.last_name,
                                                                 str(message.from_user.id),
                                                                 message.text,
                                                                 message.from_user.username))
    print(answer)

@bot.message_handler(commands=["start"])
def start(message):
    sent = bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    bot.register_next_step_handler(sent, hello)

def hello(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {name}. –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—Ç–µ –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞ /phone".format(name=message.text))

@bot.message_handler(commands=["phone"])
def phone(message):
    user_markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
    button_phone = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    user_markup.add(button_phone)
    msg = bot.send_message(message.chat.id, "–°–æ–≥–ª–∞—Å–Ω—ã –ª–∏ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ?", reply_markup=user_markup)
    bot.register_next_step_handler(msg, main_menu)

@bot.message_handler()
def main_menu(message):
    user_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    user_markup.add(*[types.KeyboardButton(name) for name in ["üöï –ó–∞–∫–∞–∑–∞—Ç—å –¢–∞–∫—Å–∏"]])
    user_markup.add(*[types.KeyboardButton(name) for name in ["üöö –î–æ—Å—Ç–∞–≤–∫–∞", "üì£ –ù–æ–≤–æ—Å—Ç–∏"]])
    user_markup.add(*[types.KeyboardButton(name) for name in ["üìã –¢–∞—Ä–∏—Ñ—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"]])
    user_markup.add(*[types.KeyboardButton(name) for name in ["‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]])
    mess = bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", reply_markup=user_markup)
    bot.register_next_step_handler(mess, menu)

@bot.message_handler("text")
def menu(message):
    if message.text == "üöï –ó–∞–∫–∞–∑–∞—Ç—å –¢–∞–∫—Å–∏":
        t = "–û—Ç–ø—Ä–∞–≤—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_loca = types.KeyboardButton(text="üåê –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        keyboard.add(button_loca)
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚åöÔ∏è–°–µ–π—á–∞—Å—å", "üìÜ –ù–∞ –∫–æ–≥–¥–∞"]])
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚è™ –ù–∞–∑–∞–¥ ‚è™"]])
        bot.send_message(message.chat.id, t,  parse_mode="HTML", reply_markup=keyboard)

    if message.text == "üì£ –ù–æ–≤–æ—Å—Ç–∏":
        j = "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏ <b>UNI TAXI</b>\nüëâ https://t.me/unitaxiofficial"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚è™ –ù–∞–∑–∞–¥ ‚è™"]])
        bot.send_message(message.chat.id, j, parse_mode="HTML", reply_markup=keyboard)

    if message.text == "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        j = "<b>UNI TAXI</b>\n\n–ø–æ–∫–∞ –Ω–∞–π—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã :)"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚è™ –ù–∞–∑–∞–¥ ‚è™"]])
        bot.send_message(message.chat.id, j, parse_mode="HTML", reply_markup=keyboard)

    if message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        k = "<b>UNI TAXI</b>\n\n<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω—ã –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–æ–π:</b>\n+99871 2001771\n+99871 2007117\n\n<b>üìû –ü—Ä–∏—ë–º –≤–æ–¥–∏—Ç–µ–ª–µ–π:</b>\n+99890 9110220\n"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚è™ –ù–∞–∑–∞–¥ ‚è™"]])
        bot.send_message(message.chat.id, k, parse_mode="HTML", reply_markup=keyboard)

    if message.text == "üìã –¢–∞—Ä–∏—Ñ—ã":
        t = "<b>–≠–∫–æ–Ω–æ–º: Maniz, Spark, Nexia</b>\n–°—Ç–∞–≤–∫–∞: 6000 —Å—É–º/3–∫–º, –æ–∂–∏–¥–∞–Ω–∏–µ/5–º–∏–Ω\n–î–∞–ª–µ–µ: 1200 —Å—É–º/–∫–º, –æ–∂–∏–¥–∞–Ω–∏–µ –º–∏–Ω/400 —Å—É–º\n–ó–∞–≥–æ—Ä–æ–¥: 1500 —Å—É–º/–∫–º\n\n<b>–ö–æ–º—Ñ–æ—Ä—Ç: Cobalt, Lacetti, Gentra</b>\n–°—Ç–∞–≤–∫–∞: 8000 —Å—É–º/3–∫–º, –æ–∂–∏–¥–∞–Ω–∏–µ/5–º–∏–Ω\n–î–∞–ª–µ–µ: 1400 —Å—É–º/–∫–º, –æ–∂–∏–¥–∞–Ω–∏–µ –º–∏–Ω/500 —Å—É–º\n–ó–∞–≥–æ—Ä–æ–¥: 1700 —Å—É–º/–∫–º\n\n<b>–ö–æ–º—Ñ–æ—Ä—Ç: Epica, Malibu, Captiva</b>\n–°—Ç–∞–≤–∫–∞: 12000 —Å—É–º/3–∫–º, –æ–∂–∏–¥–∞–Ω–∏–µ/5–º–∏–Ω\n–î–∞–ª–µ–µ: 1800 —Å—É–º/–∫–º, –æ–∂–∏–¥–∞–Ω–∏–µ –º–∏–Ω/500 —Å—É–º\n–ó–∞–≥–æ—Ä–æ–¥: 2200 —Å—É–º/–∫–º"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚è™ –ù–∞–∑–∞–¥ ‚è™"]])
        bot.send_message(message.chat.id, t, parse_mode="HTML", reply_markup=keyboard)

    if message.text == "‚è™ –ù–∞–∑–∞–¥ ‚è™":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[types.KeyboardButton(name) for name in ["üöï –ó–∞–∫–∞–∑–∞—Ç—å –¢–∞–∫—Å–∏ "]])
        markup.add(*[types.KeyboardButton(name) for name in ["üìã –¢–∞—Ä–∏—Ñ—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"]])
        markup.add(*[types.KeyboardButton(name) for name in ["‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏"]])

if __name__ == '__main__':
    bot.polling(none_stop=True)
